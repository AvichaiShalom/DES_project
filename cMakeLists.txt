cmake_minimum_required(VERSION 3.27.1)
project(cryptographic_library)

# Set C standard
set(CMAKE_C_STANDARD 11)
set(CMAKE_C_STANDARD_REQUIRED ON)
set(CMAKE_GENERATOR_PLATFORM x64 CACHE STRING "" FORCE)

# מבטל בניית יישום GUI בחלונות
set(CMAKE_WIN32_EXECUTABLE FALSE)

# Create the cryptographic shared library (DLL)
add_library(crypto SHARED
    lib/graph.c
    lib/DES_block.c
    lib/DES_modes_file.c
    lib/DES_api.c
    lib/key_generation.c
)

# Set include directories for the library
target_include_directories(crypto
    PUBLIC
        ${CMAKE_SOURCE_DIR}/include
)

# Define export macro for Windows
target_compile_definitions(crypto
    PRIVATE BUILDING_CRYPTO_DLL
)

# Create test executable
add_executable(DES_run
    prog.c
)

# Link test executable with the cryptographic library
target_link_libraries(DES_run
    PRIVATE
        crypto
)

# Set output directories
set_target_properties(DES_run
    PROPERTIES
        RUNTIME_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}/bin"
)

set_target_properties(crypto
    PROPERTIES
        RUNTIME_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}/bin"   # dll goes here
        LIBRARY_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}/lib"   # .lib (import lib)
        ARCHIVE_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}/lib"
)
